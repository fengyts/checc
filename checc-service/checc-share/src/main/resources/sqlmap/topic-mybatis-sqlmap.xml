<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.checc.domain.TopicMapper">

	<resultMap type="com.checc.domain.TopicDO" id="TopicDOResultMap">
		<id column="id" property="id" />
        <result column="topic_type" property="topicType"/>
        <result column="start_time" property="startTime"/>
        <result column="end_time" property="endTime"/>
        <result column="status" property="status"/>
        <result column="refund_currency_status" property="refundCurrencyStatus"/>
        <result column="sort" property="sort"/>
        <result column="description" property="description"/>
        <result column="remark" property="remark"/>
        <result column="create_user_id" property="createUserId"/>
        <result column="create_time" property="createTime"/>
        <result column="modify_user_id" property="modifyUserId"/>
        <result column="modify_time" property="modifyTime"/>
	</resultMap>

	<sql id="MybatisTopicDAO_all_column_fields">
	      id,topic_type,start_time,end_time,status,refund_currency_status,sort,description,remark,create_user_id,create_time,modify_user_id,modify_time
 	</sql>
	<!-- 只有varchar char text类型 做 !='' 判断，生成代码时,其他类型时只做!=null 决断 0或fasle与空''是相同的，在mybatis中的动态语句中 -->
	<sql id="MybatisTopicDAO_dynamic_where_fields"><!-- xml转义字符需要 <![CDATA[   ]]> 标签-->
		<where>
			<if test="topicType != null  and topicType != '' "> AND topic_type=#{topicType} </if>
			<if test="status != null  and status != '' "> AND status=#{status} </if>
			<if test="refundCurrencyStatus != null "> AND refund_currency_status=#{refundCurrencyStatus} </if>
			<if test="sort != null "> AND sort=#{sort} </if>
			<if test="description != null  and description != '' "> AND description=#{description} </if>
			<if test="remark != null  and remark != '' "> AND remark=#{remark} </if>
			<if test="createUserId != null "> AND create_user_id=#{createUserId} </if>
			<if test="modifyUserId != null "> AND modify_user_id=#{modifyUserId} </if>
		</where>
 	</sql>

	<select id="MybatisTopicDAO_selectById" parameterType="long" resultMap="TopicDOResultMap">
	SELECT
		<include refid="MybatisTopicDAO_all_column_fields" />
	FROM
		topic
	WHERE
		 id = #{id}
	</select>

    <insert id="MybatisTopicDAO_insert" parameterType="com.checc.domain.TopicDO" useGeneratedKeys="true">
        <selectKey resultType="long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID() AS id
        </selectKey>
        INSERT INTO topic(
				id,
				topic_type,
				start_time,
				end_time,
				status,
				refund_currency_status,
				sort,
				description,
				remark,
				create_user_id,
				create_time,
				modify_user_id,
				modify_time
		)values(
				#{id},
				#{topicType},
				#{startTime},
				#{endTime},
				#{status},
				#{refundCurrencyStatus},
				#{sort},
				#{description},
				#{remark},
				#{createUserId},
				#{createTime},
				#{modifyUserId},
				#{modifyTime}
		)
    </insert>

	<update id="MybatisTopicDAO_updateById" parameterType="com.checc.domain.TopicDO">
		UPDATE topic
		SET
					topic_type = #{topicType},
					start_time = #{startTime},
					end_time = #{endTime},
					status = #{status},
					refund_currency_status = #{refundCurrencyStatus},
					sort = #{sort},
					description = #{description},
					remark = #{remark},
					create_user_id = #{createUserId},
					modify_user_id = #{modifyUserId},
					modify_time = #{modifyTime}
		WHERE
			id = #{id}
	</update>

	<delete id="MybatisTopicDAO_deleteById" parameterType="long">
		DELETE FROM topic WHERE id = #{id}
	</delete>

	<update id="MybatisTopicDAO_update_dynamic" parameterType="com.checc.domain.TopicDO">
		UPDATE topic
		<set>
					<if test="topicType != null  and topicType != '' ">topic_type=#{topicType},</if>
					<if test="startTime != null ">start_time=#{startTime},</if>
					<if test="endTime != null ">end_time=#{endTime},</if>
					<if test="status != null  and status != '' ">status=#{status},</if>
					<if test="refundCurrencyStatus != null ">refund_currency_status=#{refundCurrencyStatus},</if>
					<if test="sort != null ">sort=#{sort},</if>
					<if test="description != null  and description != '' ">description=#{description},</if>
					<if test="remark != null  and remark != '' ">remark=#{remark},</if>
					<if test="createUserId != null ">create_user_id=#{createUserId},</if>
					<if test="modifyUserId != null ">modify_user_id=#{modifyUserId},</if>
					<if test="modifyTime != null ">modify_time=#{modifyTime},</if>
		</set>
		WHERE id = #{id}
	</update>

 	<select id="MybatisTopicDAO_select_dynamic" resultMap="TopicDOResultMap" parameterType="com.checc.domain.TopicDO">
	     SELECT
	     	<include refid="MybatisTopicDAO_all_column_fields" />
		 FROM
		 	topic
			<include refid="MybatisTopicDAO_dynamic_where_fields" />
 	</select>

 	<select id="MybatisTopicDAO_select_dynamic_count" resultType="long" parameterType="com.checc.domain.TopicDO">
	     SELECT
	     	count(1)
		 FROM
		 	topic
	 	<include refid="MybatisTopicDAO_dynamic_where_fields" />
 	</select>

 	<select id="MybatisTopicDAO_select_dynamic_page_query" resultMap="TopicDOResultMap" parameterType="com.checc.domain.TopicDO">
	     SELECT
	     	<include refid="MybatisTopicDAO_all_column_fields" />
		 FROM
		 	topic
	 	<include refid="MybatisTopicDAO_dynamic_where_fields" />
	 	ORDER BY topic.id DESC
	 	Limit #{start},#{pageSize}
 	</select>

 	
 	<select id="MybatisTopicDAO_select_all_byStatus" resultMap="TopicDOResultMap" parameterType="map">
 		SELECT
 			<include refid="MybatisTopicDAO_all_column_fields" />
 		FROM 
 			topic
		<where>
			<if test="topicType != null and topicType != '' "> AND topic_type=#{topicType} </if>
			<if test="status != null and status != '' "> AND status=#{status} </if>
			<if test="currentPeriods != null"> 
				AND start_time &lt; #{currentTime}
				AND end_time &gt; #{currentTime}
			</if>
			<if test="nextPeriods != null"> 
				AND start_time &gt; #{currentTime}
			</if>
			<if test="exchangeStartTime != null and exchangeStartTime != '' "> 
				AND start_time &gt;= #{exchangeStartTime}
			</if>
			<if test="exchangeEndTime != null and exchangeEndTime != '' "> 
				AND end_time &lt;= #{exchangeEndTime}
			</if>
		</where>
 	</select>
 	
 	<!-- 根据时间状态获取专题(未开始和进行中的) -->
 	<select id="MybatisTopicDAO_selectTopicByProgress" resultMap="TopicDOResultMap" parameterType="map">
 		SELECT
 			<include refid="MybatisTopicDAO_all_column_fields" />
 		FROM 
 			topic
		<where>
			<if test="topicType != null and topicType != '' "> AND topic_type=#{topicType} </if>
			<!-- 查询进行中的专题 -->
			<if test="inProgress != null and inProgress != ''">
				AND start_time &lt; now() 
				AND end_time &gt; now()
			</if>
			<!-- 查询未开始的专题 -->
			<if test="notStart != null and notStart != ''">
				AND start_time &gt; now() 
				<!-- 
				AND end_time &gt; now()
				 -->
			</if>
		</where>
 	</select>
 	
 	<select id="MybatisTopicDAO_selectTopicNotRefund" resultMap="TopicDOResultMap" parameterType="map">
 		SELECT
 			<include refid="MybatisTopicDAO_all_column_fields" />
 		FROM 
 			topic
 		WHERE
 			refund_currency_status = 0
 			AND topic_type = '01'
 			AND end_time &lt;= #{timerTime}
 	</select>
 	
 	<select id="MybatisTopicDAO_selectPreviousOne" resultMap="TopicDOResultMap" parameterType="string">
 		SELECT
 			<include refid="MybatisTopicDAO_all_column_fields" />
 		FROM 
 			topic
 		WHERE
 			end_time &lt; now()
 			<if test="_parameter !=null and _parameter != '' ">
 				AND topic_type = #{_parameter}
 			</if>
 		ORDER BY end_time DESC, id DESC
 		LIMIT 1
 	</select>
 	
 	<select id="MybatisTopicDAO_countPreviousAuctions" resultType="long">
 		SELECT 
 			COUNT(1)
 		FROM topic tp
 		INNER JOIN topic_item ti ON ti.topic_id = tp.id AND ti.status = 1
		WHERE 
			tp.topic_type = '01' 
			AND tp.end_time &lt; NOW()
 	</select>
 	
 	<select id="MybatisTopicDAO_queryPreviousAuctions" parameterType="map" resultType="com.checc.vo.front.TopicItemVO">
		SELECT 
			tp.id topicId, tp.topic_type topicType, tp.start_time startTime, tp.end_time endTime, tp.`status` `status`, tp.`status` itemStatus,
			ti.id id, ti.item_id itemId, ti.item_title itemTitle, ti.market_price marketPrice, ti.floor_price floorPrice, ti.inventory inventory, 
			ti.exchange_amount exchangeAmount, ti.residue residue, (SELECT ti.residue &lt;= 0) hasExchangeOut, 
			pic.picture picture, art.current_auct_price currentAuctionPrice, art.mobile mobile
		FROM topic tp
		INNER JOIN topic_item ti ON ti.topic_id = tp.id AND ti.status = 1
		LEFT JOIN item_picture pic ON pic.item_id = ti.item_id AND pic.`type` = '01' AND pic.`status` = '1'
		LEFT JOIN 
		(
			SELECT ar1.id, ar1.topic_item_id, ar1.current_auct_price, ar1.mobile
			FROM auction_record ar1
			INNER JOIN 
			(
				SELECT MAX(ar.id) id, ar.topic_item_id
				FROM auction_record ar
				WHERE ar.record_type = '01'
				GROUP BY ar.topic_item_id
			) arm ON arm.id = ar1.id
		) art ON art.topic_item_id = ti.id
		WHERE 
			tp.topic_type = '01' 
			AND tp.end_time &lt; NOW()
		ORDER BY tp.id DESC, ti.id DESC
		Limit #{start}, #{pageSize}
 	</select>
 	
 	<select id="MybatisTopicDAO_totalPreviousNum" resultType="long">
 		SELECT 
 			COUNT(1)
		FROM topic tp
		INNER JOIN topic_item ti ON ti.topic_id = tp.id AND ti.status = 1
		LEFT JOIN 
		(
			SELECT ar1.id, ar1.topic_item_id, ar1.current_auct_price, ar1.mobile
			FROM auction_record ar1
			INNER JOIN 
			(
				SELECT MAX(ar.id) id, ar.topic_item_id
				FROM auction_record ar
				WHERE ar.record_type = '01'
				GROUP BY ar.topic_item_id
			) arm ON arm.id = ar1.id
		) art ON art.topic_item_id = ti.id
		WHERE tp.topic_type = '01' AND tp.end_time &lt; NOW() AND art.current_auct_price &gt;= ti.floor_price
 		
 	</select>

</mapper>