<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.checc.domain.PurchaseApplyMapper">

	<resultMap type="com.checc.domain.PurchaseApplyDO" id="PurchaseApplyDOResultMap">
		<id column="id" property="id" />
        <result column="topic_item_id" property="topicItemId"/>
        <result column="purchase_status" property="purchaseStatus"/>
        <result column="apply_time" property="applyTime"/>
        <result column="remark" property="remark"/>
        <result column="modify_time" property="modifyTime"/>
        <result column="modify_user_id" property="modifyUserId"/>
	</resultMap>

	<sql id="MybatisPurchaseApplyDAO_all_column_fields">
	      id,topic_item_id,purchase_status,apply_time,remark,modify_time,modify_user_id
 	</sql>
	<!-- 只有varchar char text类型 做 !='' 判断，生成代码时,其他类型时只做!=null 决断 0或fasle与空''是相同的，在mybatis中的动态语句中 -->
	<sql id="MybatisPurchaseApplyDAO_dynamic_where_fields"><!-- xml转义字符需要 <![CDATA[   ]]> 标签-->
		<where>
			<if test="topicItemId != null "> AND topic_item_id=#{topicItemId} </if>
			<if test="purchaseStatus != null  and purchaseStatus != '' "> AND purchase_status=#{purchaseStatus} </if>
			<if test="remark != null  and remark != '' "> AND remark=#{remark} </if>
			<if test="modifyUserId != null "> AND modify_user_id=#{modifyUserId} </if>
		</where>
 	</sql>

	<select id="MybatisPurchaseApplyDAO_selectById" parameterType="long" resultMap="PurchaseApplyDOResultMap">
	SELECT
		<include refid="MybatisPurchaseApplyDAO_all_column_fields" />
	FROM
		purchase_apply
	WHERE
		 id = #{id}
	</select>

    <insert id="MybatisPurchaseApplyDAO_insert" parameterType="com.checc.domain.PurchaseApplyDO" useGeneratedKeys="true">
        <selectKey resultType="long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID() AS id
        </selectKey>
        INSERT INTO purchase_apply(
				id,
				topic_item_id,
				purchase_status,
				apply_time,
				remark,
				modify_time,
				modify_user_id
		)values(
				#{id},
				#{topicItemId},
				#{purchaseStatus},
				#{applyTime},
				#{remark},
				#{modifyTime},
				#{modifyUserId}
		)
    </insert>

	<update id="MybatisPurchaseApplyDAO_updateById" parameterType="com.checc.domain.PurchaseApplyDO">
		UPDATE purchase_apply
		SET
					topic_item_id = #{topicItemId},
					purchase_status = #{purchaseStatus},
					apply_time = #{applyTime},
					remark = #{remark},
					modify_time = #{modifyTime},
					modify_user_id = #{modifyUserId}
		WHERE
			id = #{id}
	</update>

	<delete id="MybatisPurchaseApplyDAO_deleteById" parameterType="long">
		DELETE FROM purchase_apply WHERE id = #{id}
	</delete>

	<update id="MybatisPurchaseApplyDAO_update_dynamic" parameterType="com.checc.domain.PurchaseApplyDO">
		UPDATE purchase_apply
		<set>
					<if test="topicItemId != null ">topic_item_id=#{topicItemId},</if>
					<if test="purchaseStatus != null  and purchaseStatus != '' ">purchase_status=#{purchaseStatus},</if>
					<if test="applyTime != null ">apply_time=#{applyTime},</if>
					<if test="remark != null  and remark != '' ">remark=#{remark},</if>
					<if test="modifyTime != null ">modify_time=#{modifyTime},</if>
					<if test="modifyUserId != null ">modify_user_id=#{modifyUserId},</if>
		</set>
		WHERE id = #{id}
	</update>

 	<select id="MybatisPurchaseApplyDAO_select_dynamic" resultMap="PurchaseApplyDOResultMap" parameterType="com.checc.domain.PurchaseApplyDO">
	     SELECT
	     	<include refid="MybatisPurchaseApplyDAO_all_column_fields" />
		 FROM
		 	purchase_apply
			<include refid="MybatisPurchaseApplyDAO_dynamic_where_fields" />
 	</select>

 	<select id="MybatisPurchaseApplyDAO_select_dynamic_count" resultType="long" parameterType="com.checc.domain.PurchaseApplyDO">
	     SELECT
	     	count(1)
		 FROM
		 	purchase_apply
	 	<include refid="MybatisPurchaseApplyDAO_dynamic_where_fields" />
 	</select>

 	<select id="MybatisPurchaseApplyDAO_select_dynamic_page_query" resultMap="PurchaseApplyDOResultMap" parameterType="com.checc.domain.PurchaseApplyDO">
	     SELECT
	     	<include refid="MybatisPurchaseApplyDAO_all_column_fields" />
		 FROM
		 	purchase_apply
	 	<include refid="MybatisPurchaseApplyDAO_dynamic_where_fields" />
	 	ORDER BY purchase_apply.id DESC
	 	Limit #{start},#{pageSize}
 	</select>
 	
 	<update id="MybatisPurchaseApplyDAO_update_success_auct_purchase" parameterType="list">
 		UPDATE purchase_apply pa SET pa.purchase_status='01'
		WHERE pa.topic_item_id IN 
			(
				<foreach collection="list" item="tiId" separator=",">
					#{tiId}
				</foreach>
			)
 	</update>
 	
 	<select id="MybatisPurchaseApplyDAO_select_auction_count" parameterType="com.checc.dto.PurchaseExchangeStatusDTO" resultType="int">
 		SELECT 
			COUNT(1)
		FROM purchase_apply pa
		INNER JOIN topic_item ti ON ti.id = pa.topic_item_id
		LEFT JOIN
		(
			SELECT ar1.id, ar1.topic_item_id, ar1.current_auct_price, ar1.mobile, ar1.user_id
			FROM auction_record ar1
			INNER JOIN 
			(
				SELECT MAX(ar.id) id, ar.topic_item_id
				FROM auction_record ar
				WHERE ar.record_type = '01'
				GROUP BY ar.topic_item_id
			) arm ON arm.id = ar1.id
		) art ON art.topic_item_id = ti.id
		<where>
			<if test="mobile !=null and mobile != '' ">AND art.mobile = #{mobile}</if>
			<if test="itemTitle !=null and itemTitle != '' ">AND ti.item_title LIKE CONCAT('%', #{itemTitle}, '%')</if>
			<if test="purchaseApplyStatus !=null and purchaseApplyStatus != '' ">
				AND pa.purchase_status = #{purchaseApplyStatus} AND tp.end_time &lt; NOW() AND ti.floor_price &lt;= art.current_auct_price 
			</if>
		</where>
 	</select>
 	
 	<select id="MybatisPurchaseApplyDAO_select_auction_page" parameterType="com.checc.dto.PurchaseExchangeStatusDTO" resultType="com.checc.vo.PurchaseApplyVO">
 		SELECT 
			tp.id topicId, tp.topic_type topicType, tp.start_time startTime, tp.end_time endTime,
			ti.id tiId, ti.item_title itemTitle, ti.market_price marketPrice, ti.floor_price floorPrice,
			pa.id purchaseId, pa.purchase_status purchaseStatus, pa.apply_time applyTime, pa.remark remark,
			art.user_id userId, art.mobile mobile, art.current_auct_price finalAuctionPrice,
			(
				SELECT COUNT(DISTINCT ar.user_id)
				FROM auction_record ar
				WHERE ar.topic_item_id = ti.id
			) countAuctionNum
		FROM purchase_apply pa
		INNER JOIN topic_item ti ON ti.id = pa.topic_item_id
		INNER JOIN topic tp ON tp.id = ti.topic_id
		LEFT JOIN
		(
			SELECT ar1.id, ar1.topic_item_id, ar1.current_auct_price, ar1.mobile, ar1.user_id
			FROM auction_record ar1
			INNER JOIN 
			(
				SELECT MAX(ar.id) id, ar.topic_item_id
				FROM auction_record ar
				WHERE ar.record_type = '01'
				GROUP BY ar.topic_item_id
			) arm ON arm.id = ar1.id
		) art ON art.topic_item_id = ti.id
		<where>
			<if test="mobile !=null and mobile != '' ">AND art.mobile = #{mobile}</if>
			<if test="itemTitle !=null and itemTitle != '' ">AND ti.item_title LIKE CONCAT('%', #{itemTitle}, '%')</if>
			<if test="purchaseApplyStatus !=null and purchaseApplyStatus != '' ">
				AND pa.purchase_status = #{purchaseApplyStatus} AND tp.end_time &lt; NOW() AND ti.floor_price &lt;= art.current_auct_price 
			</if>
		</where>
		ORDER BY pa.id DESC
		LIMIT #{start},#{pageSize}
 	</select>
 	
 	<select id="count_total_auction" parameterType="long" resultType="int">
 		SELECT COUNT(DISTINCT ar.user_id)
		FROM auction_record ar
		WHERE ar.topic_item_id=#{topicItemId}
 	</select>

</mapper>